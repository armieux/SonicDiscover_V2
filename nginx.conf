# Configuration Nginx pour SonicDiscover en production
events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logs
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Gzip compression
    gzip on;
    gzip_comp_level 6;
    gzip_min_length 1000;
    gzip_types
        text/plain
        text/css
        application/json
        application/javascript
        text/xml
        application/xml
        application/xml+rss
        text/javascript
        image/svg+xml;

    # Limite de taille d'upload
    client_max_body_size 100M;

    # Configuration du serveur principal
    server {
        listen 80;
        listen [::]:80;
        server_name _;

        # Redirection HTTPS (si SSL configuré)
        # return 301 https://$server_name$request_uri;

        # Configuration pour HTTP direct (développement/test)
        location / {
            proxy_pass http://app:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 86400;
        }

        # Servir les fichiers statiques directement
        location /uploads {
            alias /var/www/uploads;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        location /music {
            alias /var/www/music;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Sécurité
        location ~ /\. {
            deny all;
        }
    }

    # Configuration HTTPS (décommentez si vous avez un certificat SSL)
    # server {
    #     listen 443 ssl http2;
    #     listen [::]:443 ssl http2;
    #     server_name your-domain.com;

    #     # Certificats SSL
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/private.key;

    #     # Configuration SSL moderne
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;

    #     location / {
    #         proxy_pass http://app:3000;
    #         proxy_http_version 1.1;
    #         proxy_set_header Upgrade $http_upgrade;
    #         proxy_set_header Connection 'upgrade';
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #         proxy_cache_bypass $http_upgrade;
    #     }

    #     location /uploads {
    #         alias /var/www/uploads;
    #         expires 1y;
    #         add_header Cache-Control "public, immutable";
    #     }

    #     location /music {
    #         alias /var/www/music;
    #         expires 1y;
    #         add_header Cache-Control "public, immutable";
    #     }
    # }
}

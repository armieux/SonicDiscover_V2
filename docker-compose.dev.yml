# Docker Compose pour le développement local
version: '3.8'

services:
  # Base de données PostgreSQL pour le développement
  postgres-dev:
    image: postgres:15-alpine
    container_name: sonicdiscover-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-sonicdiscover}
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./db_config/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    networks:
      - sonicdiscover-dev-network

  # Interface d'administration de la base de données
  adminer-dev:
    image: adminer:4.8.1-standalone
    container_name: sonicdiscover-adminer-dev
    restart: unless-stopped
    ports:
      - "${ADMINER_PORT:-8080}:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres-dev
    networks:
      - sonicdiscover-dev-network
    depends_on:
      - postgres-dev

  # Redis pour le cache (optionnel)
  redis-dev:
    image: redis:7-alpine
    container_name: sonicdiscover-redis-dev
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_dev_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - sonicdiscover-dev-network

# Volumes pour le développement
volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local

# Réseau pour le développement
networks:
  sonicdiscover-dev-network:
    driver: bridge
